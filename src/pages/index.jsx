/* eslint-disable @next/next/no-img-element */
import React, { useState } from "react";
import Head from "next/head";
import * as C from "../styles/home.style";

import { BsSearch } from "react-icons/bs";
import useDebounce from "../hooks/useDebounce";
import Dialog from "../components/dialog";
import { useDialog } from "../context/dialog";

export default function Home({ list }) {
  const [searchText, setSearchText] = useState("");
  const [searchData, setSearchData] = useState();
  const [selectedMovieData, setSelectedMovieData] = useState();

  const debouncedSearchText = useDebounce(searchText, 500);

  const { dialogIsOpen, setDialogIsOpen } = useDialog();

  const handleSearch = async (e) => {
    e.preventDefault();
    if (debouncedSearchText !== "") {
      const response = await fetch(
        `http://localhost:3000/api/search?q=${searchText}`
      );
      const json = await response.json();
      setSearchData(json.list);
    } else {
      setSearchData();
    }
  };

  const getSelectedMovieInfo = (movieInfo) => {
    setSelectedMovieData(movieInfo);
    setDialogIsOpen(true);
    window.scroll(0, 0)
  };

  return (
    <C.Container>
      <Head>
        <title>Movie Info</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <C.Header>
        <h1>
          Movie<span>Info</span>!
        </h1>
      </C.Header>

      <C.SearchArea>
        <form>
          <input
            type="search"
            placeholder="Search..."
            value={searchText}
            onChange={(e) => setSearchText(e.target.value)}
          />
          <button type="submit" onClick={(e) => handleSearch(e)}>
            <BsSearch />
          </button>
        </form>
        <p>
          Search any movie <span>you want the info...</span>
        </p>
      </C.SearchArea>

      <C.MainArea>
        <ul>
          {searchData
            ? searchData.map((movieItem) => (
                <li
                  key={movieItem.id}
                  onClick={() => getSelectedMovieInfo(movieItem)}
                >
                  <div>
                    <img
                      src={`https://image.tmdb.org/t/p/original${movieItem.poster_path}`}
                      alt={movieItem.title}
                    />
                    <h3>{movieItem.title}</h3>
                  </div>
                </li>
              ))
            : list.map((movieItem) => (
                <li
                  key={movieItem.id}
                  onClick={() => getSelectedMovieInfo(movieItem)}
                >
                  <div>
                    <img
                      src={`https://image.tmdb.org/t/p/original${movieItem.poster_path}`}
                      alt={movieItem.title}
                    />
                    <h3>{movieItem.title}</h3>
                  </div>
                </li>
              ))}
        </ul>
      </C.MainArea>
      {dialogIsOpen && <Dialog selectedMovieData={selectedMovieData} />}
    </C.Container>
  );
}

export const getServerSideProps = async () => {
  const response = await fetch("http://localhost:3000/api/trending");
  const json = await response.json();

  return {
    props: {
      list: json.list,
    },
  };
};
